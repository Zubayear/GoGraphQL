// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ArtistsColumns holds the columns for the "artists" table.
	ArtistsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "age", Type: field.TypeInt},
		{Name: "song_artists", Type: field.TypeUUID, Nullable: true},
	}
	// ArtistsTable holds the schema information for the "artists" table.
	ArtistsTable = &schema.Table{
		Name:       "artists",
		Columns:    ArtistsColumns,
		PrimaryKey: []*schema.Column{ArtistsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "artists_songs_artists",
				Columns:    []*schema.Column{ArtistsColumns[3]},
				RefColumns: []*schema.Column{SongsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SongsColumns holds the columns for the "songs" table.
	SongsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString},
		{Name: "duration", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(6,2)"}},
		{Name: "lyrics_exits", Type: field.TypeBool, Default: false},
	}
	// SongsTable holds the schema information for the "songs" table.
	SongsTable = &schema.Table{
		Name:       "songs",
		Columns:    SongsColumns,
		PrimaryKey: []*schema.Column{SongsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ArtistsTable,
		SongsTable,
	}
)

func init() {
	ArtistsTable.ForeignKeys[0].RefTable = SongsTable
}
