// Code generated by entc, DO NOT EDIT.

package song

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the song type in the database.
	Label = "song"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldDuration holds the string denoting the duration field in the database.
	FieldDuration = "duration"
	// FieldLyricsExits holds the string denoting the lyricsexits field in the database.
	FieldLyricsExits = "lyrics_exits"
	// EdgeArtists holds the string denoting the artists edge name in mutations.
	EdgeArtists = "artists"
	// Table holds the table name of the song in the database.
	Table = "songs"
	// ArtistsTable is the table that holds the artists relation/edge.
	ArtistsTable = "artists"
	// ArtistsInverseTable is the table name for the Artist entity.
	// It exists in this package in order to avoid circular dependency with the "artist" package.
	ArtistsInverseTable = "artists"
	// ArtistsColumn is the table column denoting the artists relation/edge.
	ArtistsColumn = "song_artists"
)

// Columns holds all SQL columns for song fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldDuration,
	FieldLyricsExits,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultLyricsExits holds the default value on creation for the "lyricsExits" field.
	DefaultLyricsExits bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
